cmdhistory=["(negation (disjunction (variable \:x) (constant 1)))" "(constant 1)" "(negation (constant 1))" "(negation (constant 1) (constant 0))" "(disjunction (constant 1) (constant 0))" "(negation (disjunction (constant 1) (constant 0)))" "(list \\n  (\:lab4.operations/neg\\r\\n (\:lab4.operations/disj\\r\\n  (\:const 1)\\r\\n  (\:const 0))))" "(negation (disjunction (constant 1) (constant 0)))" "\\n(disjunction (constant 1) (constant 0))" "\\n(list \\n  (disjunction (constant 1) (constant 0)))" "(conjunction (disjunction (constant 1) (constant 0)) (disjunction (constant 1) (constant 0)))" "(disjunction (constant 1) (constant 1) (constant 1))" "(implication (constant 1) (constant 0))" "(implication\\n  (constant 0) (constant 1))" "(replace-implication (implication (constant 0) (constant 1)))" "(replace-implication (implication (variable \:a) (variable \:b)))" "(replace-implication (implication (constant 0) (constant 1)))" "(replace-implication (implication (variable \:a) (variable \:b)))" "(replace-implication (implication (constant 0) (constant 1)))" "(replace-implication (implication (variable \:a) (variable \:b)))" "(replace-implication (implication (constant 0) (constant 1)))" "(constant 1\\n          )" "(negation (constant 1))" "(replace-implication (implication (variable \:a) (variable \:b)))" "(replace-implication (implication (constant 0) (constant 1)))" "(replace-implication (implication (variable \:a) (variable \:b)))" "( implication \\n  (variable \:b) (variable \:a))" "( implication \\n  \\n  variable \:b variable \:a)" "( implication \\n  variable \:b variable \:a)" "( implication \\n  (variable \:b) (variable \:a))" "(replace-implication ( implication \\n                       (variable \:b) (variable \:a)))" "( implication \\n  (variable \:b) (variable \:a) (variable \:c))" "(push-negation \\n  (negation (disjunction (const 1) (variable \:a))))" "(push-negation \\n  (negation (disjunction (constant 1) (variable \:a))))" "(push-negation \\n  (negation (conjunction\\n              (constant 1) (variable \:a))))" "(push-negation \\n  (negation (conjunction\\n              (constant 0) (variable \:a))))" "(conjunction (variable \:a) (conjunction (variable \:b) (variable \:c)))" "(use-association \\n  (conjunction (variable \:a) (conjunction (variable \:b) (variable \:c))))" "(use-association (conjunction (variable \:a) (conjunction (variable \:b) (variable \:c))))" "\\n(conjunction (constant 1) (constant 0))" "(clean-up \\n  (conjunction (constant 1) (constant 0)))" "(clean-up \\n  (disjunction (constant 1) (constant 0)))" "(clean-up \\n  (disjunction (variable \:b) (variable \:a) (constant 0)))" "(clean-up \\r\\n  (disjunction (variable \:b) (variable \:a) (constant 0)))" "(clean-up \\r\\n  (conjunction (variable \:b) (variable \:a) (constant 0)))" "(clean-up \\r\\n  (conjunction (variable \:b) (variable \:a) (constant 1)))" "(use-association (constant 1))" "(use-association (conjunction (constant 0) (constant 1)))" "(use-association (conjunction (constant 0) (conjunction (variable \:a) (variable \:b))))" "(def a (filter (fn [x] (conjunction? x)) (args expr)))" "(filter (fn [x] (conjunction? x)) (`(constant 0) (conjunction (variable \:a) (variable \:b)))" "(filter (fn [x] (conjunction? x)) ('(constant 0) (conjunction (variable \:a) (variable \:b)))" "(filter (fn [x] (conjunction? x)) (list (constant 0) (conjunction (variable \:a) (variable \:b)))" "(filter (fn [x] (conjunction? x)) (list (constant 0) (conjunction (variable \:a) (variable \:b))))" "(use-association (conjunction (constant 0) (conjunction (variable \:a) (variable \:b))))" " (conjunction (constant 0) (conjunction (variable \:a) (variable \:b)))" "(args (conjunction (constant 0) (conjunction (variable \:a) (variable \:b))))" "(filter (fn [x] (conjunction? x)) (args (conjunction (constant 0) (conjunction (variable \:a) (variable \:b)))))" "(use-association (conjunction (constant 0) (conjunction (variable \:a) (variable \:b))))" "(map args (list (conjunction (variable \:a) (variable \:b))))" "(use-association (conjunction (constant 0) (conjunction (variable \:a) (variable \:b))))" "(use-association (conjunction (constant 0) (disjunction (variable \:a) (variable \:b))))" "(use-association (disjunction (constant 0) (disjunction (variable \:a) (variable \:b))))" "(use-association (conjunction (constant 0) (disjunction (variable \:a) (variable \:b))))" "(use-association (conjunction (constant 0) (conjunction (variable \:a) (variable \:b))))" "(use-association (disjunction (constant 0) (disjunction (variable \:a) (variable \:b))))" "(clean-up (negation (disjunction (variable \:x) (constant 0))))"]
eclipse.preferences.version=1
