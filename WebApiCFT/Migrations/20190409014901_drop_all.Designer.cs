// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApiCFT.Models;

namespace WebApiCFT.Migrations
{
    [DbContext(typeof(CftContext))]
    [Migration("20190409014901_drop_all")]
    partial class drop_all
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WebApiCFT.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastModificationTime");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2019, 4, 9, 8, 49, 1, 203, DateTimeKind.Local).AddTicks(2729),
                            Description = "Default_project_description",
                            LastModificationTime = new DateTime(2019, 4, 9, 8, 49, 1, 203, DateTimeKind.Local).AddTicks(7729),
                            Name = "Default_project_name"
                        });
                });

            modelBuilder.Entity("WebApiCFT.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("Description");

                    b.Property<DateTime>("LastModificationTime");

                    b.Property<string>("Name");

                    b.Property<int>("Priority");

                    b.Property<int>("ProjectId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Task");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2019, 4, 9, 8, 49, 1, 204, DateTimeKind.Local).AddTicks(2730),
                            Description = "Default_task_description",
                            LastModificationTime = new DateTime(2019, 4, 9, 8, 49, 1, 204, DateTimeKind.Local).AddTicks(2730),
                            Name = "Default_task_name",
                            Priority = 1,
                            ProjectId = 1,
                            Status = 0
                        });
                });

            modelBuilder.Entity("WebApiCFT.Models.Task", b =>
                {
                    b.HasOne("WebApiCFT.Models.Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
